{
  "Resources": {
    "ProducerPrimaryOneServiceRoleF309E182": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "ProducerPrimaryOneServiceRoleDefaultPolicyE0BE18AD": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": "arn:aws:events:*:*:event-bus/*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ProducerPrimaryOneServiceRoleDefaultPolicyE0BE18AD",
        "Roles": [
          {
            "Ref": "ProducerPrimaryOneServiceRoleF309E182"
          }
        ]
      }
    },
    "ProducerPrimaryOneBF07A3FD": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import boto3\nimport logging\nfrom datetime import datetime, timezone\nimport json\n\nREGION_MAIN = \"us-east-1\"\nEVENT_BUS_NAME_PRIMARY = \"event_bus_primary\"\nSOURCE_PRODUCER_PRIMARY_ONE = \"producer-primary-one\"\n\n# Configure logging\nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\n\n# Create EventBridge client\nevents_client = boto3.client(\"events\")\n\n\ndef lambda_handler(event, context):\n    entries = [\n        {\n            \"EventBusName\": EVENT_BUS_NAME_PRIMARY,\n            \"Source\": SOURCE_PRODUCER_PRIMARY_ONE,\n            \"DetailType\": \"update-account-command\",\n            \"Detail\": json.dumps(event),\n            \"Time\": datetime.now(timezone.utc),\n        }\n    ]\n\n    try:\n        result = events_client.put_events(Entries=entries)\n        logger.info(\"Event sent successfully: %s\", result)\n        return result\n    except Exception as error:\n        logger.error(\"Error sending event: %s\", error)\n        raise error\n"
        },
        "Handler": "lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "ProducerPrimaryOneServiceRoleF309E182",
            "Arn"
          ]
        },
        "Runtime": "python3.11"
      },
      "DependsOn": [
        "ProducerPrimaryOneServiceRoleDefaultPolicyE0BE18AD",
        "ProducerPrimaryOneServiceRoleF309E182"
      ]
    },
    "ProducerPrimaryTwoServiceRole7F4A61D5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "ProducerPrimaryTwoServiceRoleDefaultPolicy15BA1E41": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": "arn:aws:events:*:*:event-bus/*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ProducerPrimaryTwoServiceRoleDefaultPolicy15BA1E41",
        "Roles": [
          {
            "Ref": "ProducerPrimaryTwoServiceRole7F4A61D5"
          }
        ]
      }
    },
    "ProducerPrimaryTwo8BA4F102": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import boto3\nimport logging\nfrom datetime import datetime, timezone\nimport json\n\nREGION_MAIN = \"us-east-1\"\nEVENT_BUS_NAME_PRIMARY = \"event_bus_primary\"\nSOURCE_PRODUCER_PRIMARY_ONE = \"producer-primary-two\"\n\n# Configure logging\nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\n\n# Create EventBridge client\nevents_client = boto3.client(\"events\")\n\n\ndef lambda_handler(event, context):\n    entries = [\n        {\n            \"EventBusName\": EVENT_BUS_NAME_PRIMARY,\n            \"Source\": SOURCE_PRODUCER_PRIMARY_ONE,\n            \"DetailType\": \"update-account-command\",\n            \"Detail\": json.dumps(event),\n            \"Time\": datetime.now(timezone.utc),\n        }\n    ]\n\n    try:\n        result = events_client.put_events(Entries=entries)\n        logger.info(\"Event sent successfully: %s\", result)\n        return result\n    except Exception as error:\n        logger.error(\"Error sending event: %s\", error)\n        raise error\n"
        },
        "Handler": "lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "ProducerPrimaryTwoServiceRole7F4A61D5",
            "Arn"
          ]
        },
        "Runtime": "python3.11"
      },
      "DependsOn": [
        "ProducerPrimaryTwoServiceRoleDefaultPolicy15BA1E41",
        "ProducerPrimaryTwoServiceRole7F4A61D5"
      ]
    },
    "EventBusPrimaryToSecondaryRole9591F725": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "events:PutEvents",
                  "Effect": "Allow",
                  "Resource": "arn:aws:events:*:*:event-bus/*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "PutEventsPolicy"
          }
        ]
      }
    },
    "EventBusPrimaryToSecondaryRoleDefaultPolicy2D302E31": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": "arn:aws:events:eu-central-1:987174437467:event-bus/event_bus_secondary"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "EventBusPrimaryToSecondaryRoleDefaultPolicy2D302E31",
        "Roles": [
          {
            "Ref": "EventBusPrimaryToSecondaryRole9591F725"
          }
        ]
      }
    },
    "EventBusPrimaryFDF4B9CE": {
      "Type": "AWS::Events::EventBus",
      "Properties": {
        "Name": "event_bus_primary"
      }
    },
    "RuleEventBusSecondary2E201959": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventBusName": {
          "Ref": "EventBusPrimaryFDF4B9CE"
        },
        "EventPattern": {
          "source": [
            "producer-primary-one"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": "arn:aws:events:eu-central-1:987174437467:event-bus/event_bus_secondary",
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "EventBusPrimaryToSecondaryRole9591F725",
                "Arn"
              ]
            }
          }
        ]
      }
    },
    "PrimaryQueueA5C77487": {
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "PrimaryQueuePolicyE610731E": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "PrimaryQueueA5C77487",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "RuleSqs3E705E9E",
                      "Arn"
                    ]
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "PrimaryQueueA5C77487",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "PrimaryQueueA5C77487"
          }
        ]
      }
    },
    "RuleSqs3E705E9E": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventBusName": {
          "Ref": "EventBusPrimaryFDF4B9CE"
        },
        "EventPattern": {
          "source": [
            "producer-primary-one",
            "producer-primary-two"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "PrimaryQueueA5C77487",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    }
  },
  "Outputs": {
    "LambdaProducerPrimaryOneFunctionName": {
      "Value": {
        "Ref": "ProducerPrimaryOneBF07A3FD"
      }
    },
    "LambdaProducerPrimaryTwoFunctionName": {
      "Value": {
        "Ref": "ProducerPrimaryTwo8BA4F102"
      }
    },
    "SqSQueuePrimaryUrl": {
      "Value": {
        "Ref": "PrimaryQueueA5C77487"
      }
    }
  }
}
